<div id="copy-toast" class="fixed bottom-20 right-4 bg-card border border-card text-content px-4 py-2 rounded-md shadow-lg opacity-0 transition-opacity duration-300 z-50">
  <svg class="w-4 h-4 mr-2 inline-block" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
  </svg>
  Enlace copiado al portapapeles
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Función para mostrar el toast
    const showToast = (message = 'Enlace copiado al portapapeles') => {
      const toast = document.getElementById('copy-toast');
      if (!toast) return;

      // Actualizar el mensaje si es necesario
      if (message && message !== 'Enlace copiado al portapapeles') {
        toast.innerHTML = `<svg class="w-4 h-4 mr-2 inline-block" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
        </svg> ${message}`;
      }

      // Mostrar el toast
      toast.style.opacity = '1';

      // Ocultar después de 2 segundos
      setTimeout(() => {
        toast.style.opacity = '0';
      }, 2000);
    };

    // Escuchar el evento personalizado
    document.addEventListener('show-toast', ((event) => {
      // Usar casting para acceder a detail
      const customEvent = event as CustomEvent<{message?: string}>;
      const message = customEvent.detail?.message || 'Enlace copiado al portapapeles';
      showToast(message);
    }) as EventListener);
  });
</script>


