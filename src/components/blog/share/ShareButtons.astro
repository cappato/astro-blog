---
/**
 * Componente ShareButtons refactorizado con TypeScript
 * Orquestador principal que usa los componentes individuales
 */

import ShareButton from './ShareButton.astro';
import type { ShareButtonsProps, ShareData } from './types';
import { SocialPlatform } from './types';
import { DEFAULT_PLATFORMS } from './constants';
import { validateShareData, sanitizeTitle, makeAbsoluteUrl } from './utils';

interface Props extends ShareButtonsProps {}

const {
  url,
  title,
  description,
  hashtags = [],
  compact = false,
  showTitle = true,
  platforms = DEFAULT_PLATFORMS
} = Astro.props;

// Validar y preparar datos de compartir
const shareData: ShareData = {
  url: makeAbsoluteUrl(url, Astro.url.origin),
  title: sanitizeTitle(title),
  description,
  hashtags
};

// Validar que los datos sean correctos
if (!validateShareData(shareData)) {
  throw new Error(`Datos de compartir inválidos: ${JSON.stringify(shareData)}`);
}

// Determinar variante y configuración
const variant = compact ? 'compact' : 'full';
const buttonSize = compact ? 'sm' : 'md';

// Clases CSS para el contenedor
const containerClasses = compact ? 'mt-4 mb-3' : 'mt-8';
const buttonsContainerClasses = compact ? 'flex space-x-2' : 'flex flex-wrap gap-3';
---

<div class={containerClasses}>
  {showTitle && !compact && (
    <h3 class="text-lg font-medium mb-4 text-content">
      ¿Te gustó este artículo? ¡Compártelo!
    </h3>
  )}

  <div class="flex items-center">
    {compact && (
      <span class="text-xs text-content mr-3">
        Compartir:
      </span>
    )}

    <div class={buttonsContainerClasses}>
      {platforms.map(platform => (
        <ShareButton
          platform={platform}
          shareData={shareData}
          variant={variant}
          size={buttonSize}
          showLabel={!compact}
        />
      ))}
    </div>
  </div>
</div>

<!-- Script para funcionalidad del lado del cliente -->
<script>
  // Funcionalidad de compartir integrada
  document.addEventListener('DOMContentLoaded', () => {
    // Manejar botones de copiar enlace
    const copyButtons = document.querySelectorAll('[data-action="copy"]');
    copyButtons.forEach(button => {
      button.addEventListener('click', async (event) => {
        event.preventDefault();

        const url = button.getAttribute('data-url') || window.location.href;

        try {
          await navigator.clipboard.writeText(url);

          // Mostrar toast de confirmación
          const toastEvent = new CustomEvent('show-toast', {
            detail: { message: '¡Enlace copiado al portapapeles!' }
          });
          document.dispatchEvent(toastEvent);

          // Feedback visual temporal
          const originalClasses = button.className;
          button.classList.add('bg-green-500');
          setTimeout(() => {
            button.className = originalClasses;
          }, 1000);

        } catch (error) {
          console.error('Error al copiar enlace:', error);
          const toastEvent = new CustomEvent('show-toast', {
            detail: { message: 'Error al copiar el enlace' }
          });
          document.dispatchEvent(toastEvent);
        }
      });
    });

    // Manejar botones de Facebook
    const facebookButtons = document.querySelectorAll('[data-action="facebook-share"]');
    facebookButtons.forEach(button => {
      button.addEventListener('click', (event) => {
        event.preventDefault();

        const url = button.getAttribute('data-url') || '';
        const title = button.getAttribute('data-title') || '';

        if (!url || !title) {
          console.error('Datos de compartir inválidos');
          return;
        }

        try {
          // Detectar si es móvil
          const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth < 768;

          if (isMobile) {
            // En móviles, usar la API de Facebook para Android/iOS
            window.open(`fb://facewebmodal/f?href=${encodeURIComponent(url)}`, '_blank');
          } else {
            // En desktop, usar la URL web estándar
            window.open(`https://www.facebook.com/sharer.php?u=${encodeURIComponent(url)}`, '_blank', 'width=600,height=400,scrollbars=yes,resizable=yes');
          }
        } catch (error) {
          console.error('Error al compartir en Facebook:', error);
        }
      });
    });
  });
</script>

<style>
  /* Estilos para el contenedor principal */
  .share-buttons-container {
    position: relative;
  }

  /* Animación de entrada suave */
  @media (prefers-reduced-motion: no-preference) {
    .share-buttons-container {
      animation: fadeInUp 0.3s ease-out;
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  /* Respeto por las preferencias de movimiento reducido */
  @media (prefers-reduced-motion: reduce) {
    .share-buttons-container {
      animation: none;
    }
  }

  /* Mejoras de accesibilidad */
  .share-buttons-container:focus-within {
    outline: 2px solid transparent;
  }

  /* Espaciado responsivo */
  @media (max-width: 640px) {
    .share-buttons-container .flex-wrap {
      flex-direction: column;
      align-items: stretch;
      gap: 0.5rem;
    }
  }
</style>
