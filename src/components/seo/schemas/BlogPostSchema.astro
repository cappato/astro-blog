---
interface Props {
  title: string;
  description: string;
  date: Date | string;
  author: string;
  image: string | { url: string; alt?: string; width?: number; height?: number; };
  url: string;
  updatedDate?: Date | string;
  tags?: string[];
}

const { 
  title, 
  description, 
  date, 
  updatedDate, 
  author = "Matías Cappato",
  image,
  url,
  tags = []
} = Astro.props;

// Asegurarse de que date sea un objeto Date
const dateObj = date instanceof Date ? date : new Date(date);

// Formatear fechas para Schema.org
const publishDateISO = dateObj.toISOString();

// Manejar updatedDate de manera similar
let updateDateISO;
if (updatedDate) {
  const updatedDateObj = updatedDate instanceof Date ? updatedDate : new Date(updatedDate);
  updateDateISO = updatedDateObj.toISOString();
} else {
  updateDateISO = publishDateISO;
}

// Determinar la URL de la imagen
const imageUrl = typeof image === 'string' ? image : image.url;

// Construir el objeto JSON-LD
const articleSchema = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": title,
  "description": description,
  "image": imageUrl,
  "author": {
    "@type": "Person",
    "name": author,
    "url": "https://cappato.dev/about"
  },
  "publisher": {
    "@type": "Organization",
    "name": "Matías Cappato",
    "logo": {
      "@type": "ImageObject",
      "url": "https://cappato.dev/logo.png"
    }
  },
  "datePublished": publishDateISO,
  "dateModified": updateDateISO,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": url
  },
  "keywords": tags.join(", ")
};

// Convertir a JSON string
const schemaString = JSON.stringify(articleSchema);
---

<!-- Insertar Schema.org JSON-LD -->
<script type="application/ld+json" set:html={schemaString} />

