---
/**
 * Global Breadcrumbs Feature - Global Breadcrumbs Component
 * 
 * Componente de breadcrumbs modular y global para todo el sitio
 * Auto-detecta la ruta actual y genera breadcrumbs apropiados
 */

import type { BreadcrumbItem, BreadcrumbConfig } from '../config/breadcrumbs.config';
import { 
  generateBreadcrumbsFromConfig, 
  DEFAULT_BREADCRUMB_CONFIG 
} from '../config/breadcrumbs.config';

interface Props {
  customTitle?: string;
  customBreadcrumbs?: BreadcrumbItem[];
  config?: Partial<BreadcrumbConfig>;
  className?: string;
  variant?: 'default' | 'minimal' | 'compact';
}

const {
  customTitle,
  customBreadcrumbs,
  config: customConfig,
  className = '',
  variant = 'default'
} = Astro.props;

// Configuración final
const config = { ...DEFAULT_BREADCRUMB_CONFIG, ...customConfig };

// Generar breadcrumbs de forma simple y directa
const breadcrumbs = customBreadcrumbs || generateSimpleBreadcrumbs(Astro.url.pathname, customTitle);

function generateSimpleBreadcrumbs(pathname: string, customTitle?: string) {
  const breadcrumbs = [];

  // Siempre agregar Home si no estamos en home
  if (pathname !== '/') {
    breadcrumbs.push({
      label: 'Inicio',
      href: '/',
      icon: '🏠'
    });
  }

  // Rutas específicas
  if (pathname.startsWith('/blog')) {
    if (pathname !== '/blog') {
      breadcrumbs.push({
        label: 'Blog',
        href: '/blog',
        icon: '📝'
      });
    }

    if (pathname === '/blog/pillars') {
      breadcrumbs.push({
        label: 'Pilares de Contenido',
        current: true,
        icon: '📚'
      });
    } else if (pathname.startsWith('/blog/tag/')) {
      const tagName = pathname.split('/').pop();
      breadcrumbs.push({
        label: `#${tagName}`,
        current: true,
        icon: '🏷️'
      });
    } else if (pathname.startsWith('/blog/') && pathname !== '/blog') {
      breadcrumbs.push({
        label: customTitle || 'Artículo',
        current: true,
        icon: '📄'
      });
    } else if (pathname === '/blog') {
      breadcrumbs.push({
        label: 'Blog',
        current: true,
        icon: '📝'
      });
    }
  }

  // Si estamos en home, mostrar solo home
  if (pathname === '/') {
    breadcrumbs.push({
      label: 'Inicio',
      current: true,
      icon: '🏠'
    });
  }

  return breadcrumbs;
}

// Generar clases CSS
const containerClasses = [
  'global-breadcrumbs',
  `global-breadcrumbs--${variant}`,
  `global-breadcrumbs--${config.separator}`,
  className
].filter(Boolean).join(' ');

// Generar structured data para SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": breadcrumbs
    .filter(item => item.href || item.current)
    .map((item, index) => ({
      "@type": "ListItem",
      "position": index + 1,
      "name": item.label,
      ...(item.href && { "item": `${Astro.site?.href || 'https://cappato.dev'}${item.href}` })
    }))
};
---

{breadcrumbs.length > 0 && (
  <>
    <!-- Structured Data para SEO -->
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} is:inline />

    <!-- Breadcrumbs Navigation -->
    <nav 
      class={containerClasses}
      aria-label="Breadcrumb navigation"
      role="navigation"
    >
      <ol class="global-breadcrumbs__list">
        {breadcrumbs.map((item, index) => (
          <li class="global-breadcrumbs__item">
            {item.current ? (
              <span 
                class="global-breadcrumbs__current"
                aria-current="page"
              >
                {config.showIcons && item.icon && (
                  <span class="global-breadcrumbs__icon" aria-hidden="true">
                    {item.icon}
                  </span>
                )}
                <span class="global-breadcrumbs__text">{item.label}</span>
              </span>
            ) : item.href ? (
              <a 
                href={item.href}
                class="global-breadcrumbs__link"
              >
                {config.showIcons && item.icon && (
                  <span class="global-breadcrumbs__icon" aria-hidden="true">
                    {item.icon}
                  </span>
                )}
                <span class="global-breadcrumbs__text">{item.label}</span>
              </a>
            ) : (
              <span class="global-breadcrumbs__ellipsis">
                {item.label}
              </span>
            )}
            
            {index < breadcrumbs.length - 1 && (
              <span class="global-breadcrumbs__separator" aria-hidden="true">
                {config.separator === 'arrow' && '→'}
                {config.separator === 'slash' && '/'}
                {config.separator === 'chevron' && (
                  <svg 
                    width="16" 
                    height="16" 
                    viewBox="0 0 16 16"
                    fill="currentColor"
                  >
                    <path d="M6 4l4 4-4 4" stroke="currentColor" stroke-width="2" fill="none"/>
                  </svg>
                )}
              </span>
            )}
          </li>
        ))}
      </ol>
    </nav>
  </>
)}

<style>
  .global-breadcrumbs {
    margin: 1rem 0;
    padding: 0.75rem 0;
    border-bottom: 1px solid var(--color-border);
    font-size: 0.875rem;
  }
  
  .global-breadcrumbs__list {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.5rem;
    list-style: none;
    margin: 0;
    padding: 0;
  }
  
  .global-breadcrumbs__item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .global-breadcrumbs__link {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    color: var(--color-text-secondary);
    text-decoration: none;
    transition: all 0.2s ease;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
  }
  
  .global-breadcrumbs__link:hover {
    color: var(--color-primary);
    background: var(--color-primary-alpha);
    text-decoration: none;
  }
  
  .global-breadcrumbs__link:focus {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
  
  .global-breadcrumbs__current {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    color: var(--color-text-primary);
    font-weight: 500;
    padding: 0.25rem 0.5rem;
  }
  
  .global-breadcrumbs__ellipsis {
    color: var(--color-text-tertiary);
    font-weight: 500;
    padding: 0.25rem 0.5rem;
  }
  
  .global-breadcrumbs__icon {
    font-size: 0.875em;
    line-height: 1;
  }
  
  .global-breadcrumbs__text {
    line-height: 1.2;
  }
  
  .global-breadcrumbs__separator {
    color: var(--color-text-tertiary);
    flex-shrink: 0;
    display: flex;
    align-items: center;
  }
  
  /* Separator variants */
  .global-breadcrumbs--arrow .global-breadcrumbs__separator {
    font-size: 0.75rem;
  }
  
  .global-breadcrumbs--slash .global-breadcrumbs__separator {
    font-size: 1rem;
    font-weight: 300;
  }
  
  .global-breadcrumbs--chevron .global-breadcrumbs__separator svg {
    width: 14px;
    height: 14px;
  }
  
  /* Variants */
  .global-breadcrumbs--minimal {
    margin: 0.5rem 0;
    padding: 0.5rem 0;
    border-bottom: none;
    font-size: 0.8125rem;
  }
  
  .global-breadcrumbs--minimal .global-breadcrumbs__link,
  .global-breadcrumbs--minimal .global-breadcrumbs__current {
    padding: 0.125rem 0.25rem;
  }
  
  .global-breadcrumbs--compact {
    margin: 0.25rem 0;
    padding: 0.25rem 0;
    font-size: 0.75rem;
  }
  
  .global-breadcrumbs--compact .global-breadcrumbs__list {
    gap: 0.25rem;
  }
  
  .global-breadcrumbs--compact .global-breadcrumbs__item {
    gap: 0.25rem;
  }
  
  .global-breadcrumbs--compact .global-breadcrumbs__link,
  .global-breadcrumbs--compact .global-breadcrumbs__current {
    padding: 0.125rem 0.25rem;
    gap: 0.25rem;
  }
  
  .global-breadcrumbs--compact .global-breadcrumbs__icon {
    font-size: 0.75em;
  }
  
  /* Dark mode */
  :global(.dark) .global-breadcrumbs {
    border-bottom-color: var(--color-border-dark);
  }
  
  /* Mobile responsive */
  @media (max-width: 640px) {
    .global-breadcrumbs {
      margin: 0.5rem 0;
      padding: 0.5rem 0;
      font-size: 0.8125rem;
    }
    
    .global-breadcrumbs__list {
      gap: 0.375rem;
    }
    
    .global-breadcrumbs__item {
      gap: 0.375rem;
    }
    
    .global-breadcrumbs__link,
    .global-breadcrumbs__current {
      padding: 0.125rem 0.375rem;
      gap: 0.25rem;
    }
    
    .global-breadcrumbs__separator svg {
      width: 12px;
      height: 12px;
    }
    
    /* Hide icons on very small screens */
    @media (max-width: 480px) {
      .global-breadcrumbs__icon {
        display: none;
      }
    }
  }
  
  /* High contrast mode */
  @media (prefers-contrast: high) {
    .global-breadcrumbs__link {
      text-decoration: underline;
    }
    
    .global-breadcrumbs__current {
      font-weight: 600;
    }
    
    .global-breadcrumbs {
      border-bottom-width: 2px;
    }
  }
  
  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .global-breadcrumbs__link {
      transition: none;
    }
  }
  
  /* Print styles */
  @media print {
    .global-breadcrumbs {
      border-bottom: 1px solid #ccc;
      margin-bottom: 1rem;
    }
    
    .global-breadcrumbs__link {
      color: #000;
      text-decoration: underline;
    }
    
    .global-breadcrumbs__current {
      color: #000;
      font-weight: 600;
    }
    
    .global-breadcrumbs__separator {
      color: #666;
    }
  }
  
  /* Focus management for keyboard navigation */
  .global-breadcrumbs__link:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
    border-radius: 4px;
  }
  
  /* Hover effects for better UX */
  .global-breadcrumbs__link:hover .global-breadcrumbs__icon {
    transform: scale(1.1);
    transition: transform 0.2s ease;
  }
  
  @media (prefers-reduced-motion: reduce) {
    .global-breadcrumbs__link:hover .global-breadcrumbs__icon {
      transform: none;
      transition: none;
    }
  }
</style>
