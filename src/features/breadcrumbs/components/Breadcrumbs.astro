---
/**
 * Breadcrumbs Feature - Main Component
 *
 * Componente único y limpio para navegación jerárquica
 * Genera breadcrumbs automáticamente basado en la ruta actual
 */

import { generateBreadcrumbs } from '../utils/breadcrumbs';
import { BREADCRUMB_CONFIG } from '../config/routes';

interface Props {
  customTitle?: string;
  className?: string;
}

const { customTitle, className = '' } = Astro.props;
const pathname = Astro.url.pathname;

// Generar breadcrumbs
const breadcrumbs = generateBreadcrumbs(pathname, customTitle);

// No mostrar breadcrumbs si solo hay un item (home page)
const shouldShow = breadcrumbs.length > 1 || (breadcrumbs.length === 1 && breadcrumbs[0].current);

// Generar structured data para SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": breadcrumbs.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.label,
    ...(item.href && { "item": `https://cappato.dev${item.href}` })
  }))
};
---

{shouldShow && (
  <>
    <!-- Structured Data para SEO -->
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

    <!-- Breadcrumbs Navigation -->
    <nav class={`breadcrumbs ${className}`} aria-label="Breadcrumb navigation">
      <ol class="breadcrumbs__list">
        {breadcrumbs.map((item, index) => (
          <li class="breadcrumbs__item">
            {item.current ? (
              <span class="breadcrumbs__current" aria-current="page">
                {BREADCRUMB_CONFIG.showIcons && item.icon && (
                  <span class="breadcrumbs__icon">{item.icon}</span>
                )}
                <span class="breadcrumbs__text">{item.label}</span>
              </span>
            ) : (
              <a href={item.href} class="breadcrumbs__link">
                {BREADCRUMB_CONFIG.showIcons && item.icon && (
                  <span class="breadcrumbs__icon">{item.icon}</span>
                )}
                <span class="breadcrumbs__text">{item.label}</span>
              </a>
            )}

            {index < breadcrumbs.length - 1 && (
              <span class="breadcrumbs__separator" aria-hidden="true">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                  <path d="M6 4l4 4-4 4" stroke="currentColor" stroke-width="2"/>
                </svg>
              </span>
            )}
          </li>
        ))}
      </ol>
    </nav>
  </>
)}

<style>
  .breadcrumbs {
    margin: 1rem 0;
    padding: 0.75rem 0;
    border-bottom: 1px solid var(--color-border);
    font-size: 0.875rem;
  }
  
  .breadcrumbs__list {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.5rem;
    list-style: none;
    margin: 0;
    padding: 0;
  }
  
  .breadcrumbs__item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  
  .breadcrumbs__link {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    color: var(--color-text-secondary);
    text-decoration: none;
    transition: color 0.2s ease;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
  }
  
  .breadcrumbs__link:hover {
    color: var(--color-primary);
    background: var(--color-primary-alpha);
  }
  
  .breadcrumbs__link:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
  
  .breadcrumbs__current {
    display: flex;
    align-items: center;
    gap: 0.375rem;
    color: var(--color-text-primary);
    font-weight: 500;
    padding: 0.25rem 0.5rem;
  }
  
  .breadcrumbs__icon {
    font-size: 0.875em;
    line-height: 1;
  }
  
  .breadcrumbs__text {
    line-height: 1.2;
  }
  
  .breadcrumbs__separator {
    color: var(--color-text-tertiary);
    flex-shrink: 0;
    display: flex;
    align-items: center;
  }
  
  /* Dark mode */
  :global(.dark) .breadcrumbs {
    border-bottom-color: var(--color-border-dark);
  }
  
  /* Mobile responsive */
  @media (max-width: 640px) {
    .breadcrumbs {
      margin: 0.5rem 0;
      padding: 0.5rem 0;
      font-size: 0.8125rem;
    }
    
    .breadcrumbs__list {
      gap: 0.375rem;
    }
    
    .breadcrumbs__item {
      gap: 0.375rem;
    }
    
    .breadcrumbs__link,
    .breadcrumbs__current {
      padding: 0.125rem 0.375rem;
      gap: 0.25rem;
    }
    
    .breadcrumbs__separator svg {
      width: 12px;
      height: 12px;
    }
  }
  
  /* Hide icons on very small screens */
  @media (max-width: 480px) {
    .breadcrumbs__icon {
      display: none;
    }
  }
  
  /* High contrast mode */
  @media (prefers-contrast: high) {
    .breadcrumbs__link {
      text-decoration: underline;
    }
    
    .breadcrumbs__current {
      font-weight: 600;
    }
    
    .breadcrumbs {
      border-bottom-width: 2px;
    }
  }
  
  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .breadcrumbs__link {
      transition: none;
    }
  }
</style>
