---
/**
 * Breadcrumbs Feature - Main Component
 *
 * Componente único y limpio para navegación jerárquica
 * Genera breadcrumbs automáticamente basado en la ruta actual
 */

import { generateBreadcrumbs } from '../utils/breadcrumbs';
import { BREADCRUMB_CONFIG } from '../config/routes';

interface Props {
  customTitle?: string;
  className?: string;
}

const { customTitle, className = '' } = Astro.props;
const pathname = Astro.url.pathname;

// Generar breadcrumbs
const breadcrumbs = generateBreadcrumbs(pathname, customTitle);

// No mostrar breadcrumbs si solo hay un item (home page)
const shouldShow = breadcrumbs.length > 1 || (breadcrumbs.length === 1 && breadcrumbs[0].current);

// Generar structured data para SEO
const structuredData = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  "itemListElement": breadcrumbs.map((item, index) => ({
    "@type": "ListItem",
    "position": index + 1,
    "name": item.label,
    ...(item.href && { "item": `https://cappato.dev${item.href}` })
  }))
};
---

{shouldShow && (
  <>
    <!-- Structured Data para SEO -->
    <script type="application/ld+json" set:html={JSON.stringify(structuredData)} />

    <!-- Breadcrumbs Navigation -->
    <nav class={`py-3 ${className}`} aria-label="Breadcrumb navigation">
      <ol class="flex items-center flex-wrap gap-2 text-sm">
        {breadcrumbs.map((item, index) => (
          <li class="flex items-center">
            {item.current ? (
              <span class="flex items-center gap-1 text-primary font-medium" aria-current="page">
                {BREADCRUMB_CONFIG.showIcons && item.icon && (
                  <span class="text-sm">{item.icon}</span>
                )}
                <span>{item.label}</span>
              </span>
            ) : (
              <a href={item.href} class="flex items-center gap-1 text-secondary hover:text-primary transition-colors">
                {BREADCRUMB_CONFIG.showIcons && item.icon && (
                  <span class="text-sm">{item.icon}</span>
                )}
                <span>{item.label}</span>
              </a>
            )}

            {index < breadcrumbs.length - 1 && (
              <span class="mx-2 text-muted" aria-hidden="true">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                  <path d="M6 4l4 4-4 4" stroke="currentColor" stroke-width="2"/>
                </svg>
              </span>
            )}
          </li>
        ))}
      </ol>
    </nav>
  </>
)}

<!-- CSS eliminado - Usar Tailwind: my-4 py-3 border-b border-card text-sm, flex items-center flex-wrap gap-2, etc. -->
