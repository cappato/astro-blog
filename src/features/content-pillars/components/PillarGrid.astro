---
/**
 * Content Pillars Feature - Pillar Grid Component
 * 
 * Grid responsivo para mostrar m√∫ltiples pilares de contenido
 * Soporta diferentes layouts y configuraciones
 */

import type { PillarGridProps } from '../types/pillars.types';
import PillarCard from './PillarCard.astro';
import { groupPostsByPillars } from '../utils/pillar-manager';
import { getCollection } from 'astro:content';

interface Props extends PillarGridProps {}

const {
  pillars,
  variant = 'default',
  showStats = true,
  className = ''
} = Astro.props;

// Obtener posts para calcular estad√≠sticas si es necesario
let postsByPillar = {};
if (showStats) {
  try {
    const allPosts = await getCollection('blog');
    postsByPillar = groupPostsByPillars(allPosts);
  } catch (error) {
    console.warn('Could not load posts for pillar stats:', error);
  }
}

// Generar clases CSS para el grid
const gridClasses = [
  'pillar-grid',
  `pillar-grid--${variant}`,
  className
].filter(Boolean).join(' ');
---

<!-- Pillar Grid -->
<section
  class={gridClasses}
  aria-label="Pilares de contenido"
>
  {pillars.length === 0 ? (
    <!-- Empty state -->
    <div class="pillar-grid__empty">
      <div class="pillar-grid__empty-icon">
        üìö
      </div>
      <h3 class="pillar-grid__empty-title">
        No hay pilares disponibles
      </h3>
      <p class="pillar-grid__empty-description">
        Los pilares de contenido aparecer√°n aqu√≠ cuando est√©n configurados.
      </p>
    </div>
  ) : (
    <!-- Grid de pilares -->
    <div class="pillar-grid__container">
      {pillars.map(pillar => {
        const postCount = showStats && postsByPillar[pillar.id] 
          ? postsByPillar[pillar.id].posts.length 
          : 0;
        
        return (
          <PillarCard
            pillar={pillar}
            postCount={postCount}
            variant={variant}
            showDescription={variant !== 'compact'}
            showPostCount={showStats}
            showIcon={true}
            className="pillar-grid__item"
          />
        );
      })}
    </div>
  )}
</section>

<style>
  .pillar-grid {
    @apply w-full my-8;
  }

  .pillar-grid__container {
    @apply grid grid-cols-1 md:grid-cols-2 gap-6;
  }

  .pillar-grid__item {
    @apply h-full;
  }
  
  /* Empty state */
  .pillar-grid__empty {
    @apply flex flex-col items-center justify-center text-center;
    @apply p-16 bg-card border-2 border-dashed border-border rounded-xl;
    @apply min-h-[300px];
  }

  .pillar-grid__empty-icon {
    @apply text-6xl mb-4 opacity-60;
  }

  .pillar-grid__empty-title {
    @apply text-2xl font-semibold text-foreground mb-2;
  }

  .pillar-grid__empty-description {
    @apply text-muted max-w-md leading-relaxed;
  }
  
  /* Variants */
  .pillar-grid--compact .pillar-grid__container {
    @apply gap-4;
  }

  .pillar-grid--featured .pillar-grid__container {
    @apply gap-8;
  }

</style>
