---
/**
 * Content Pillars Feature - Pillar Card Component
 * 
 * Tarjeta individual para mostrar un pilar de contenido
 * Soporta múltiples variantes y configuraciones
 */

import type { PillarCardProps } from '../types/pillars.types';
import { generatePillarUrl } from '../utils/pillar-manager';

interface Props extends PillarCardProps {}

const { 
  pillar,
  postCount = 0,
  variant = 'default',
  showDescription = true,
  showPostCount = true,
  showIcon = true,
  className = ''
} = Astro.props;

const pillarUrl = generatePillarUrl(pillar.id);

// Generar clases CSS dinámicas
const cardClasses = [
  'pillar-card',
  `pillar-card--${variant}`,
  className
].filter(Boolean).join(' ');

// Estilos dinámicos basados en los colores del pilar
const pillarStyles = {
  '--pillar-primary': pillar.color.primary,
  '--pillar-secondary': pillar.color.secondary,
  '--pillar-background': pillar.color.background
};
---

<!-- Pillar Card -->
<article 
  class={cardClasses}
  style={pillarStyles}
  data-pillar-id={pillar.id}
>
  <a 
    href={pillarUrl}
    class="pillar-card__link"
    aria-label={`Explorar artículos sobre ${pillar.title}`}
  >
    <!-- Header -->
    <header class="pillar-card__header">
      {showIcon && (
        <div class="pillar-card__icon-container">
          <span class="pillar-card__emoji" aria-hidden="true">
            {pillar.emoji}
          </span>
        </div>
      )}
      
      <div class="pillar-card__title-container">
        <h3 class="pillar-card__title">{pillar.title}</h3>
        
        {showPostCount && postCount > 0 && (
          <span class="pillar-card__post-count">
            {postCount} {postCount === 1 ? 'artículo' : 'artículos'}
          </span>
        )}
      </div>
    </header>

    <!-- Content -->
    {showDescription && variant !== 'compact' && (
      <div class="pillar-card__content">
        <p class="pillar-card__description">
          {pillar.description}
        </p>
      </div>
    )}

    <!-- Footer -->
    <footer class="pillar-card__footer">
      {variant === 'featured' && (
        <div class="pillar-card__tags">
          {pillar.tags.slice(0, 3).map(tag => (
            <span class="pillar-card__tag">#{tag}</span>
          ))}
          {pillar.tags.length > 3 && (
            <span class="pillar-card__tag-more">
              +{pillar.tags.length - 3}
            </span>
          )}
        </div>
      )}
      
      <div class="pillar-card__cta">
        <span class="pillar-card__cta-text">
          Explorar artículos
        </span>
        <svg 
          class="pillar-card__cta-icon" 
          width="16" 
          height="16" 
          viewBox="0 0 16 16"
          aria-hidden="true"
        >
          <path 
            d="M6 4l4 4-4 4" 
            stroke="currentColor" 
            stroke-width="2" 
            fill="none"
          />
        </svg>
      </div>
    </footer>
  </a>
</article>

<style>
  .pillar-card {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 12px;
    overflow: hidden;
    transition: all 0.3s ease;
    position: relative;
    height: 100%;
    display: flex;
    flex-direction: column;
  }
  
  .pillar-card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 25px var(--color-shadow);
    border-color: var(--pillar-primary);
  }
  
  .pillar-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(
      90deg, 
      var(--pillar-primary), 
      var(--pillar-secondary)
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .pillar-card:hover::before {
    opacity: 1;
  }
  
  .pillar-card__link {
    display: flex;
    flex-direction: column;
    height: 100%;
    padding: 1.5rem;
    text-decoration: none;
    color: inherit;
  }
  
  .pillar-card__link:focus {
    outline: 2px solid var(--pillar-primary);
    outline-offset: 2px;
  }
  
  /* Header */
  .pillar-card__header {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
    margin-bottom: 1rem;
  }
  
  .pillar-card__icon-container {
    flex-shrink: 0;
    width: 48px;
    height: 48px;
    background: var(--pillar-background);
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.3s ease;
  }
  
  .pillar-card:hover .pillar-card__icon-container {
    transform: scale(1.1);
  }
  
  .pillar-card__emoji {
    font-size: 1.5rem;
    line-height: 1;
  }
  
  .pillar-card__title-container {
    flex: 1;
    min-width: 0;
  }
  
  .pillar-card__title {
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--color-text-primary);
    margin: 0 0 0.25rem 0;
    line-height: 1.3;
  }
  
  .pillar-card__post-count {
    font-size: 0.875rem;
    color: var(--pillar-primary);
    font-weight: 500;
  }
  
  /* Content */
  .pillar-card__content {
    flex: 1;
    margin-bottom: 1rem;
  }
  
  .pillar-card__description {
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin: 0;
    font-size: 0.9375rem;
  }
  
  /* Footer */
  .pillar-card__footer {
    margin-top: auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  
  .pillar-card__tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .pillar-card__tag {
    background: var(--pillar-background);
    color: var(--pillar-primary);
    padding: 0.25rem 0.5rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 500;
  }
  
  .pillar-card__tag-more {
    background: var(--color-surface-secondary);
    color: var(--color-text-secondary);
    padding: 0.25rem 0.5rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 500;
  }
  
  .pillar-card__cta {
    display: flex;
    align-items: center;
    justify-content: space-between;
    color: var(--pillar-primary);
    font-weight: 500;
    font-size: 0.875rem;
  }
  
  .pillar-card__cta-icon {
    transition: transform 0.3s ease;
  }
  
  .pillar-card:hover .pillar-card__cta-icon {
    transform: translateX(4px);
  }
  
  /* Variants */
  .pillar-card--compact {
    min-height: auto;
  }
  
  .pillar-card--compact .pillar-card__link {
    padding: 1rem;
  }
  
  .pillar-card--compact .pillar-card__header {
    margin-bottom: 0.5rem;
  }
  
  .pillar-card--compact .pillar-card__icon-container {
    width: 40px;
    height: 40px;
  }
  
  .pillar-card--compact .pillar-card__emoji {
    font-size: 1.25rem;
  }
  
  .pillar-card--compact .pillar-card__title {
    font-size: 1.125rem;
  }
  
  .pillar-card--featured {
    border-width: 2px;
    background: linear-gradient(
      135deg,
      var(--color-surface) 0%,
      var(--pillar-background) 100%
    );
  }
  
  .pillar-card--featured::before {
    opacity: 1;
    height: 6px;
  }
  
  .pillar-card--featured .pillar-card__icon-container {
    width: 56px;
    height: 56px;
    background: var(--pillar-primary);
  }
  
  .pillar-card--featured .pillar-card__emoji {
    font-size: 1.75rem;
    filter: brightness(0) invert(1);
  }
  
  .pillar-card--featured .pillar-card__title {
    font-size: 1.375rem;
  }
  
  /* Dark mode */
  :global(.dark) .pillar-card {
    background: var(--color-surface-dark);
    border-color: var(--color-border-dark);
  }
  
  :global(.dark) .pillar-card__tag-more {
    background: var(--color-surface-secondary-dark);
  }
  
  /* Mobile responsive */
  @media (max-width: 640px) {
    .pillar-card__link {
      padding: 1rem;
    }
    
    .pillar-card__header {
      gap: 0.75rem;
    }
    
    .pillar-card__icon-container {
      width: 40px;
      height: 40px;
    }
    
    .pillar-card__emoji {
      font-size: 1.25rem;
    }
    
    .pillar-card__title {
      font-size: 1.125rem;
    }
    
    .pillar-card__description {
      font-size: 0.875rem;
    }
  }
  
  /* High contrast mode */
  @media (prefers-contrast: high) {
    .pillar-card {
      border-width: 2px;
    }
    
    .pillar-card__tag {
      border: 1px solid var(--pillar-primary);
    }
  }
  
  /* Reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .pillar-card,
    .pillar-card__icon-container,
    .pillar-card__cta-icon {
      transition: none;
    }
    
    .pillar-card:hover {
      transform: none;
    }
  }
</style>
