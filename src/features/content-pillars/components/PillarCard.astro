---
/**
 * Content Pillars Feature - Pillar Card Component
 *
 * Tarjeta individual para mostrar un pilar de contenido con diseño limpio y profesional
 */

import type { PillarCardProps } from '../types/pillars.types';
import { generatePillarUrl } from '../utils/pillar-manager';
import Card from '../../../components/ui/Card.astro';

interface Props extends PillarCardProps {}

const {
  pillar,
  postCount = 0,
  variant = 'default',
  showDescription = true,
  showPostCount = true,
  showIcon = true,
  className = ''
} = Astro.props;

const pillarUrl = generatePillarUrl(pillar.id);
---

<!-- Pillar Card con estilo similar a artículos relacionados -->
<article class={`pillar-card pillar-card--${variant} ${className}`}>
  <a
    href={pillarUrl}
    class="pillar-card__link"
    aria-label={`Explorar artículos sobre ${pillar.title}`}
  >
    <!-- Thumbnail -->
    <div class="pillar-card__thumbnail">
      <img
        src={pillar.image.src}
        alt={pillar.image.alt}
        class="pillar-card__image"
        loading="lazy"
        width="300"
        height="200"
      />
    </div>

    <!-- Content -->
    <div class="pillar-card__content">
      <!-- Header -->
      <header class="pillar-card__header">
        <h3 class="pillar-card__title">
          {pillar.title}
        </h3>

        <!-- Meta info -->
        <div class="pillar-card__meta">
          {showPostCount && postCount > 0 && (
            <span class="pillar-card__post-count">
              {postCount} {postCount === 1 ? 'artículo' : 'artículos'}
            </span>
          )}

          {showIcon && pillar.emoji && (
            <span class="pillar-card__emoji">
              {pillar.emoji}
            </span>
          )}
        </div>
      </header>

      <!-- Description -->
      {showDescription && variant !== 'compact' && (
        <div class="pillar-card__description">
          <p>{pillar.description}</p>
        </div>
      )}

      <!-- Tags -->
      {pillar.tags && pillar.tags.length > 0 && (
        <div class="pillar-card__tags">
          {pillar.tags.slice(0, 3).map(tag => (
            <span class="pillar-card__tag">
              #{tag}
            </span>
          ))}
          {pillar.tags.length > 3 && (
            <span class="pillar-card__tag-more">
              +{pillar.tags.length - 3}
            </span>
          )}
        </div>
      )}
    </div>

    <!-- Footer con CTA -->
    <footer class="pillar-card__footer">
      <div class="pillar-card__cta">
        <span>Explorar artículos</span>
        <svg class="pillar-card__cta-icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true">
          <path d="M6 4l4 4-4 4" stroke="currentColor" stroke-width="2" fill="none"/>
        </svg>
      </div>
    </footer>
  </a>
</article>

<!-- CSS eliminado - Usar Tailwind directo: bg-card border border-card rounded-lg overflow-hidden transition-all duration-300 hover:shadow-lg h-full flex flex-col -->
