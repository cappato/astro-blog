---
/**
 * Content Pillars Feature - Pillar Card Component
 *
 * Tarjeta individual para mostrar un pilar de contenido con diseño limpio y profesional
 */

import type { PillarCardProps } from '../types/pillars.types';
import { generatePillarUrl } from '../utils/pillar-manager';
import Card from '../../../components/ui/Card.astro';

interface Props extends PillarCardProps {}

const {
  pillar,
  postCount = 0,
  variant = 'default',
  showDescription = true,
  showPostCount = true,
  showIcon = true,
  className = ''
} = Astro.props;

const pillarUrl = generatePillarUrl(pillar.id);
---

<!-- Pillar Card con diseño limpio y profesional -->
<Card variant="default" className={`group hover:shadow-lg transition-all duration-300 ${className}`}>
  <a
    href={pillarUrl}
    class="block h-full no-underline text-inherit hover:text-inherit"
    aria-label={`Explorar artículos sobre ${pillar.title}`}
  >
    <!-- Imagen del pilar -->
    <div class="relative overflow-hidden rounded-t-lg">
      <img
        src={pillar.image.src}
        alt={pillar.image.alt}
        class="w-full h-48 object-cover transition-transform duration-300 group-hover:scale-105"
        loading="lazy"
      />
      <!-- Overlay con emoji -->
      <div class="absolute top-4 right-4 w-12 h-12 bg-white/90 dark:bg-gray-800/90 rounded-full flex items-center justify-center text-2xl backdrop-blur-sm">
        {pillar.emoji}
      </div>
    </div>

    <!-- Contenido de la card -->
    <div class="p-6">
      <!-- Título centrado -->
      <div class="text-center mb-4">
        <h3 class="text-xl font-bold text-foreground mb-2 leading-tight">
          {pillar.title}
        </h3>

        {showPostCount && postCount > 0 && (
          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary/10 text-primary">
            {postCount} {postCount === 1 ? 'artículo' : 'artículos'}
          </span>
        )}
      </div>

      <!-- Descripción -->
      {showDescription && variant !== 'compact' && (
        <div class="mb-6">
          <p class="text-muted leading-relaxed text-sm text-center line-clamp-3">
            {pillar.description}
          </p>
        </div>
      )}

      <!-- Tags (solo en variant featured) -->
      {variant === 'featured' && pillar.tags && pillar.tags.length > 0 && (
        <div class="flex flex-wrap gap-2 justify-center mb-6">
          {pillar.tags.slice(0, 3).map(tag => (
            <span class="px-2 py-1 rounded-md text-xs font-medium bg-secondary/20 text-secondary">
              #{tag}
            </span>
          ))}
          {pillar.tags.length > 3 && (
            <span class="px-2 py-1 rounded-md text-xs font-medium bg-muted/20 text-muted">
              +{pillar.tags.length - 3}
            </span>
          )}
        </div>
      )}

      <!-- Call to action centrado -->
      <div class="text-center">
        <span class="inline-flex items-center gap-2 text-primary font-medium text-sm group-hover:gap-3 transition-all duration-300">
          Explorar artículos
          <svg
            class="w-4 h-4 transition-transform duration-300 group-hover:translate-x-1"
            viewBox="0 0 16 16"
            aria-hidden="true"
          >
            <path
              d="M6 4l4 4-4 4"
              stroke="currentColor"
              stroke-width="2"
              fill="none"
            />
          </svg>
        </span>
      </div>
    </div>
  </a>
</Card>

<style>
  /* Estilos mínimos para line-clamp si no está disponible en Tailwind */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
