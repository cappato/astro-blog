---
/**
 * Related Articles Feature - Related Articles Component
 * 
 * Componente principal para mostrar artículos relacionados
 * Utiliza el motor de similitud para encontrar contenido relevante
 */

import type { RelatedArticlesProps } from '../types/related.types';
import { getCollection } from 'astro:content';
import { similarityEngine } from '../utils/similarity-engine';
import { DEFAULT_RELATED_CONFIG, getConfigForPostType, detectPostType } from '../config/related.config';
import RelatedArticleCard from './RelatedArticleCard.astro';

interface Props extends RelatedArticlesProps {}

const {
  currentPost,
  maxArticles,
  variant = 'grid',
  cardStyle = 'standard',
  showReadingTime = true,
  showPublishDate = true,
  showTags = true,
  showExcerpt = true,
  showThumbnail = true,
  className = '',
  title = 'Artículos Relacionados',
  customConfig
} = Astro.props;

// Obtener todos los posts
const allPosts = await getCollection('blog');

// Detectar tipo de post y obtener configuración apropiada
const postType = detectPostType(currentPost.data.tags || []);
let config = getConfigForPostType(postType);

// Aplicar configuración personalizada si se proporciona
if (customConfig) {
  config = {
    ...config,
    ...customConfig,
    algorithm: { ...config.algorithm, ...customConfig.algorithm },
    display: { ...config.display, ...customConfig.display },
    layout: { ...config.layout, ...customConfig.layout }
  };
}

// Sobrescribir maxArticles si se proporciona
if (maxArticles) {
  config.display.maxArticles = maxArticles;
}

// Encontrar artículos relacionados
const relatedResult = await similarityEngine.findRelatedArticles(
  currentPost,
  allPosts,
  config
);

const relatedArticles = relatedResult.articles;

// No necesitamos clases CSS custom ni estilos dinámicos
// Usamos Tailwind CSS directamente
---

{relatedArticles.length > 0 && (
  <section
    class={`mt-12 pt-8 border-t ${className}`}
    aria-label="Artículos relacionados"
  >
    <!-- Header -->
    <header class="text-center mb-8">
      <h2 class="text-3xl font-bold mb-2">
        {title}
      </h2>
      <p class="max-w-2xl mx-auto">
        Contenido que podría interesarte basado en este artículo
      </p>
    </header>

    <!-- Articles Grid - Estructura Unificada -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {relatedArticles.map((relatedArticle, index) => (
        <RelatedArticleCard
          article={relatedArticle}
          variant={cardStyle}
          showReadingTime={showReadingTime}
          showPublishDate={showPublishDate}
          showTags={showTags}
          showExcerpt={showExcerpt}
          showThumbnail={showThumbnail}
          showSimilarityScore={false}
        />
      ))}
    </div>

    <!-- Debug info (solo en desarrollo) -->
    {import.meta.env.DEV && (
      <details class="mt-8 p-4 text-sm">
        <summary class="cursor-pointer font-medium">Debug Info (solo en desarrollo)</summary>
        <div class="mt-4 space-y-2">
          <p><strong>Algoritmo:</strong> {relatedResult.algorithmUsed}</p>
          <p><strong>Tiempo de ejecución:</strong> {relatedResult.executionTime.toFixed(2)}ms</p>
          <p><strong>Candidatos totales:</strong> {relatedResult.totalCandidates}</p>
          <p><strong>Cache hit:</strong> {relatedResult.cacheHit ? 'Sí' : 'No'}</p>
          <p><strong>Tipo de post detectado:</strong> {postType}</p>
        </div>
      </details>
    )}
  </section>
)}


