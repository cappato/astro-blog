---
/**
 * Performance Optimization Feature - Deferred Scripts Component
 *
 * Componente simple para optimizaci√≥n de scripts
 */

interface Props {
  enableAnalytics?: boolean;
  deferAnalytics?: boolean;
}

const {
  enableAnalytics = false,
  deferAnalytics = true
} = Astro.props;
---

<!-- Performance Script Loader - Optimized -->
<script type="module" is:inline>
  // Performance monitoring and optimization
  console.log('‚ö° Performance optimizations active');

  // Monitor Core Web Vitals
  if ('web-vital' in window || 'PerformanceObserver' in window) {
    // Monitor LCP (Largest Contentful Paint)
    new PerformanceObserver((entryList) => {
      for (const entry of entryList.getEntries()) {
        if (entry.entryType === 'largest-contentful-paint') {
          console.log('üìä LCP:', entry.startTime);
        }
      }
    }).observe({ entryTypes: ['largest-contentful-paint'] });

    // Monitor CLS (Cumulative Layout Shift)
    new PerformanceObserver((entryList) => {
      for (const entry of entryList.getEntries()) {
        if (!entry.hadRecentInput) {
          console.log('üìä CLS:', entry.value);
        }
      }
    }).observe({ entryTypes: ['layout-shift'] });
  }

  // Prefetch critical resources on hover
  const prefetchLinks = document.querySelectorAll('a[href^="/blog/"]');
  prefetchLinks.forEach(link => {
    link.addEventListener('mouseenter', () => {
      const href = link.getAttribute('href');
      if (href && !document.querySelector(`link[href="${href}"]`)) {
        const prefetchLink = document.createElement('link');
        prefetchLink.rel = 'prefetch';
        prefetchLink.href = href;
        document.head.appendChild(prefetchLink);
      }
    }, { once: true });
  });
</script>


