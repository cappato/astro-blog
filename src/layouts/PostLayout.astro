---
import BaseLayout from '../components/layout/BaseLayout.astro';
import BlogNavbar from '../components/layout/navbar/BlogNavbar.astro';
import Footer from '../components/layout/footer/Footer.astro';
import ImageVariants from '../components/media/ImageVariants.astro';
import { ShareButtons, ShareMessage, CopyToast } from '../features/social-share';
import TagList from '../components/blog/TagList.astro';
import { getReadingTime, formatReadingTime } from '../features/reading-time';
import AuthorCard from '../features/blog-enhancements/components/AuthorCard.astro';
import RelatedArticles from '../features/related-articles/components/RelatedArticles.astro';
import OptimizedImage from '../features/performance-optimization/components/OptimizedImage.astro';

import type { CollectionEntry } from 'astro:content';

// Definir la interfaz para las props
interface Props {
  title: string;
  description: string;
  date: Date;
  author: string;
  // Sistema antiguo
  image?: {
    url: string;
    alt: string;
  };
  // Nuevo sistema
  postId?: string;
  imageAlt?: string;
  tags?: string[];
  // Para el nuevo sistema de schemas
  entry?: CollectionEntry<'blog'>;
}

// Props que recibe el componente
const { title, description, date, author, image, postId, imageAlt, tags, entry } = Astro.props;

// Determinar quÃ© sistema de imÃ¡genes usar
const useNewImageSystem = !!postId;

// Determinar la imagen para compartir
const shareImage = useNewImageSystem
  ? {
      url: `/images/${postId}/portada-og.webp`,
      alt: imageAlt || title,
      width: 1200,
      height: 630
    }
  : {
      url: image?.url || '',
      alt: image?.alt || title,
      width: 1200,
      height: 630
    };

// Formatear la fecha
const formattedDate = date.toLocaleDateString('es-ES', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});

// Calcular tiempo de lectura
const content = await Astro.slots.render('default');
const readingTime = getReadingTime(content);
const readingTimeText = formatReadingTime(readingTime);

// URL actual para compartir
const currentUrl = Astro.url.href;



// Crear objeto currentPost para RelatedArticles
const currentPost = {
  slug: Astro.url.pathname.replace('/blog/', '').replace('/', ''),
  data: {
    title,
    description,
    date: new Date(date),
    tags: tags || [],
    image,
    author
  },
  body: '' // No necesitamos el body completo para related articles
} as any;
---

<BaseLayout
  title={`${title} | MatÃ­as Cappato`}
  description={description}
  image={shareImage.url}
  imageAlt={shareImage.alt}
  type="article"
  keywords={tags}
  publishedDate={date.toISOString()}
  modifiedDate={date.toISOString()}
  customTitle={title}
>
  <link rel="stylesheet" href="/styles/blog.css" slot="head">
  <style slot="head">
    @import '../features/blog-enhancements/styles/blog-enhancements.css';

    /* Estilos especÃ­ficos para las variantes del autor en posts */
    .author-byline {
      background: var(--color-surface-secondary);
      border: 1px solid var(--color-border);
      border-radius: 8px;
      padding: 1rem;
      margin: 0;
    }

    .author-extended {
      margin-top: 3rem;
      padding-top: 2rem;
      border-top: 2px solid var(--color-border);
    }

    /* Dark mode */
    :global(.dark) .author-byline {
      background: var(--color-surface-secondary-dark);
      border-color: var(--color-border-dark);
    }

    :global(.dark) .author-extended {
      border-top-color: var(--color-border-dark);
    }
  </style>

  <BlogNavbar currentPath={Astro.url.pathname} slot="header" />



  <main id="main-content" class="container mx-auto px-6 sm:px-4 py-4">
    <!-- Contenido del artÃ­culo -->
    <article class="max-w-4xl mx-auto">
      <!-- Imagen destacada optimizada -->
      <div class="w-full h-64 md:h-80 overflow-hidden rounded-lg">
        {useNewImageSystem ? (
          <ImageVariants
            postId={postId}
            type="default"
            alt={imageAlt || title}
            className="w-full h-full object-cover"
            lazy={false}
            fetchpriority="high"
            width={1200}
            height={630}
            debug={import.meta.env.DEV}
          />
        ) : image?.url ? (
          <OptimizedImage
            src={image.url}
            alt={image.alt || title}
            width={1200}
            height={630}
            className="w-full h-full object-cover"
            lazy={false}
            priority={true}
            aspectRatio="16/9"
            variant="default"
            showLQIP={false}
            sizes="(max-width: 768px) 100vw, 1200px"
          />
        ) : (
          <div class="w-full h-full bg-gradient-to-br from-primary/20 to-primary/5 flex items-center justify-center">
            <span class="text-primary/60 text-lg font-medium">ðŸ“„ {title}</span>
          </div>
        )}
      </div>

      <div class="p-6">
        <!-- Metadatos del post -->
        <div class="mb-6 border-b divider pb-4">
          <h1 class="text-3xl font-bold text-primary mb-3">{title}</h1>

          <!-- Autor compacto al inicio del artÃ­culo -->
          <div class="mb-4">
            <AuthorCard
              variant="compact"
              layout="horizontal"
              showBio="short"
              showStats={false}
              showAchievements={false}
              showSkills={false}
              showSocial={true}
              maxSocialLinks={3}
              className="author-byline"
            />
          </div>

          <div class="flex flex-wrap items-center text-sm text-muted mb-3">
            <span class="mr-4 flex items-center">
              <i class="fas fa-calendar mr-1"></i> {formattedDate}
            </span>
            <span class="flex items-center">
              <i class="fas fa-clock mr-1"></i> {readingTimeText}
            </span>
          </div>

          <!-- Barra de compartir horizontal (componente) -->
          <ShareButtons url={currentUrl} title={title} compact={true} />

          <!-- Tags -->
          {tags && tags.length > 0 && (
            <TagList tags={tags} />
          )}
        </div>

        <!-- Contenido del post -->
        <div class="prose prose-lg max-w-none dark:prose-invert">
          <slot />
        </div>

        <!-- MÃ³dulo de Autor Extendido -->
        <AuthorCard
          variant="full"
          layout="vertical"
          showBio="extended"
          showStats={true}
          showAchievements={true}
          showSkills={true}
          showSocial={true}
          maxSocialLinks={6}
          className="author-extended"
        />

        <!-- ArtÃ­culos Relacionados -->
        <RelatedArticles
          currentPost={currentPost}
          maxArticles={3}
          variant="grid"
          cardStyle="standard"
          showReadingTime={true}
          showPublishDate={true}
          showTags={true}
          showExcerpt={true}
          showThumbnail={true}
          title="ArtÃ­culos Relacionados"
        />

        <!-- Botones para compartir -->
        <div class="mt-8 pt-6 border-t border-border dark:border-border-dark">
          <h3 class="text-lg font-medium mb-4 text-primary-content">Â¿Te gustÃ³ este artÃ­culo? Â¡CompÃ¡rtelo!</h3>

          <!-- Componente de botones para compartir (versiÃ³n completa) -->
          <ShareButtons url={currentUrl} title={title} compact={false} showTitle={false} />

          <!-- Componente de mensaje para compartir -->
          <div class="mt-6">
            <ShareMessage
              title={title}
              description={description}
              url={currentUrl}
              tags={tags}
            />
          </div>
        </div>
      </div>
    </article>
  </main>

  <Footer slot="footer" />

  <!-- Componente de toast para notificaciones de copia -->
  <CopyToast />
</BaseLayout>


