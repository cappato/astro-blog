---
import '../../styles/global.css';
import BlogNavbar from '../../components/layout/navbar/BlogNavbar.astro';
import Footer from '../../components/layout/footer/Footer.astro';
import CommonScripts from '../../components/layout/CommonScripts.astro';
import Favicons from '../../components/seo/Favicons.astro';
import { MetaTags } from '../../features/meta-tags/components';
import { AutoSchema } from '../../features/schema';
import { ThemeScript } from '../../features/dark-light-mode/components';
import { getCollection } from 'astro:content';
import BaseTag from '../../components/ui/BaseTag.astro';
import BlogPostCard from '../../components/blog/BlogPostCard.astro';
import {
  getDisplayPosts,
  getAllTags,
  transformPostsToCardData,
  getBlogSeoData,
  getTagUrl
} from '../../utils/blogPost.ts';
import { PillarGrid } from '../../features/content-pillars/components';
import { getFeaturedPillars } from '../../features/content-pillars/config/pillars.config';

// Get all blog posts
const allPosts = await getCollection('blog');

// Filter and sort posts for display
const posts = getDisplayPosts(allPosts);

// Extract all unique tags
const allTags = getAllTags(allPosts);

// Transform posts to card data
const postCards = transformPostsToCardData(posts);

// SEO metadata
const { title, description } = getBlogSeoData();

// Get featured pillars
const featuredPillars = getFeaturedPillars();
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{title}</title>

    <!-- Script anti-flicker (debe ir lo antes posible) -->
    <ThemeScript />
    <MetaTags
        title={title}
        description={description}
        image={{ url: "/images/blog-cover.webp", alt: "Blog de MatÃ­as Cappato sobre desarrollo web y tecnologÃ­a" }}
        type="website"
        keywords={["blog", "desarrollo web", "programaciÃ³n", "javascript", "react", "node.js"]}
    />
    <Favicons />

    <!-- Schema.org structured data - FULLY AUTOMATED -->
    <AutoSchema />

    <CommonScripts />
    <link rel="stylesheet" href="/styles/blog.css">
</head>
<body class="font-sans transition-theme">
    <BlogNavbar currentPath="/blog" />

    <main class="container mx-auto px-4 py-8">
        <header class="mb-12 text-center">
            <h1 class="text-4xl font-bold mb-4 text-primary">Blog</h1>
            <p class="text-xl text-content max-w-2xl mx-auto">{description}</p>
        </header>

        <!-- Featured Pillars Section -->
        {featuredPillars.length > 0 && (
            <section class="mb-12">
                <div class="flex items-center justify-between mb-6">
                    <h2 class="text-2xl font-bold text-content">ðŸŽ¯ Pilares de Contenido</h2>
                    <a
                        href="/blog/pillars"
                        class="text-primary hover:text-primary-dark font-medium text-sm flex items-center gap-1 transition-colors"
                    >
                        Ver todos
                        <svg width="16" height="16" viewBox="0 0 16 16" fill="currentColor">
                            <path d="M6 4l4 4-4 4" stroke="currentColor" stroke-width="2" fill="none"/>
                        </svg>
                    </a>
                </div>

                <PillarGrid
                    pillars={featuredPillars}
                    variant="compact"
                    columns={{ desktop: 3, tablet: 2, mobile: 1 }}
                    showStats={true}
                    className="mb-8"
                />
            </section>
        )}

        <!-- Tag filter section -->
        <section class="mb-12">
            <h2 class="text-2xl font-bold mb-4 text-content">Explorar por tema</h2>
            <div class="flex flex-wrap gap-2">
                {allTags.map(tag => (
                    <BaseTag tag={tag} href={getTagUrl(tag)} />
                ))}
            </div>
        </section>

        <!-- Posts list -->
        <section>
            <h2 class="text-2xl font-bold mb-6 text-content">ArtÃ­culos recientes</h2>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                {postCards.map((postCard, index) => (
                    <BlogPostCard
                        post={postCard}
                        loading={index < 3 ? 'eager' : 'lazy'}
                    />
                ))}
            </div>
        </section>
    </main>

    <Footer />
</body>
</html>


