name: PR Automation

on:
  pull_request:
    types: [opened, edited, synchronize, ready_for_review]
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:


  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Validate PR Title
      uses: actions/github-script@v7
      with:
        script: |
          const title = context.payload.pull_request.title;
          const validPrefixes = ['feat:', 'fix:', 'docs:', 'style:', 'refactor:', 'test:', 'chore:'];
          
          const hasValidPrefix = validPrefixes.some(prefix => title.toLowerCase().startsWith(prefix));
          
          if (!hasValidPrefix) {
            try {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                body: `⚠️ **PR Title Validation Failed**\n\nPlease use conventional commit format for PR titles:\n- \`feat: description\` for new features\n- \`fix: description\` for bug fixes\n- \`docs: description\` for documentation\n- \`style: description\` for formatting changes\n- \`refactor: description\` for code refactoring\n- \`test: description\` for tests\n- \`chore: description\` for maintenance\n\nCurrent title: "${title}"`
              });
            } catch (error) {
              console.log('⚠️ Could not create comment (insufficient permissions):', error.message);
            }

            core.setFailed('PR title does not follow conventional commit format');
          }





  auto-merge-check:
    name: Auto Merge Check
    runs-on: ubuntu-latest
    needs: [pr-validation]
    if: |
      github.event.pull_request.draft == false &&
      contains(github.event.pull_request.labels.*.name, 'auto-merge') &&
      github.event.pull_request.mergeable == true
    
    steps:
    - name: Check Auto Merge Conditions
      uses: actions/github-script@v7
      with:
        script: |
          const pr = context.payload.pull_request;
          
          // Check if all required checks pass
          const { data: checks } = await github.rest.checks.listForRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: pr.head.sha
          });
          
          const allChecksPassed = checks.check_runs.every(check => 
            check.status === 'completed' && check.conclusion === 'success'
          );
          
          if (allChecksPassed && pr.mergeable) {
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              commit_title: `${pr.title} (#${pr.number})`,
              commit_message: `Merge pull request #${context.payload.pull_request.number}`,
              merge_method: 'squash'
            });
            
            console.log('✅ PR automatically merged');
          } else {
            console.log('⏳ PR not ready for auto-merge');
          }
