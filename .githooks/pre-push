#!/bin/bash

# Pre-push hook para prevenir push directo a main
# Fuerza el uso de PRs para mantener workflow consistente

protected_branch='main'
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

# Colores para output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üîç Verificando push a rama protegida...${NC}"

# Verificar si estamos intentando pushear a main
if [ "$current_branch" = "$protected_branch" ]; then
    echo -e "${RED}‚ùå ERROR: Push directo a '$protected_branch' no permitido${NC}"
    echo -e "${RED}   Para mantener el workflow de PRs y auto-merge${NC}"
    echo ""
    echo -e "${YELLOW}üìã Workflow recomendado:${NC}"
    echo -e "${GREEN}   1. git checkout -b feature/mi-cambio${NC}"
    echo -e "${GREEN}   2. git add . && git commit -m 'feat: mi cambio'${NC}"
    echo -e "${GREEN}   3. git push origin feature/mi-cambio${NC}"
    echo -e "${GREEN}   4. gh pr create --label auto-merge${NC}"
    echo ""
    echo -e "${YELLOW}üîß Para emergencias (usar con cuidado):${NC}"
    echo -e "${YELLOW}   git push --no-verify origin main${NC}"
    echo ""
    exit 1
fi

echo -e "${GREEN}‚úÖ Push permitido desde rama: $current_branch${NC}"
exit 0
